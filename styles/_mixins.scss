@use 'sass:math';
@use 'variables' as *;

@mixin container($width, $exactWidth: null) {
  @if $width == fluid {
    width: $mobile-container;
  } @else if $width == large {
    width: $large-container;
  } @else if $width == wide {
    width: $wide-container;
  } @else {
    width: $exactWidth;
  }

  margin-left: auto;
  margin-right: auto;
  padding-left: env(safe-area-inset-left);
  padding-right: env(safe-area-inset-right);
}

@mixin multiscreenContainer() {
  @include container(fluid);

  @media (min-width: $large-screen) {
    @include container(large);
  }
}

@mixin square($size) {
  width: $size;
  height: $size;
}

@mixin circle($size) {
  width: $size;
  height: $size;
  border-radius: 50%;
}

@mixin place-center() {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin position($direction: center, $offset: 0, $position: absolute) {
  position: $position;
  margin: auto;

  @if $direction == center {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }

  @if $direction == top {
    top: $offset;
    right: 0;
    bottom: auto;
    left: 0;
  }

  @if $direction == right {
    top: 0;
    right: $offset;
    bottom: 0;
    left: auto;
  }

  @if $direction == bottom {
    top: auto;
    right: 0;
    bottom: $offset;
    left: 0;
  }

  @if $direction == left {
    top: 0;
    right: auto;
    bottom: 0;
    left: $offset;
  }
}

@mixin scrollbar($width, $background: $color-237) {
  overflow-y: auto;

  &::-webkit-scrollbar {
    width: $width;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $background;
  }
}

//
// Transitions
//

@mixin hasHoverSupport() {
  &:hover {
    @media (hover: hover) {
      @content;
    }
  }
}

@mixin transparentize-on-hover($opacity: 0.85) {
  @include hasHoverSupport {
    opacity: $opacity;
  }
}

@mixin brightness-on-hover($brightness) {
  @include hasHoverSupport {
    filter: brightness($brightness);
  }
}

@mixin scale-on-active($scale: 0.9) {
  transition: transform 150ms ease-in;
  will-change: transform;

  &:active {
    transform: scale($scale);
  }
}

//
// Triangle
//
@mixin triangle($direction, $color, $sizeW, $sizeH: $sizeW) {
  content: '';
  display: inline-block;
  width: 0;
  height: 0;
  border-style: solid;

  @if $direction == top {
    border-width: 0 math.div($sizeW, 2) $sizeH math.div($sizeW, 2);
    border-color: transparent transparent $color transparent;
  }

  @if $direction == bottom {
    border-width: $sizeH math.div($sizeW, 2) 0 math.div($sizeW, 2);
    border-color: $color transparent transparent transparent;
  }

  @if $direction == left {
    border-width: math.div($sizeH, 2) $sizeW math.div($sizeH, 2) 0;
    border-color: transparent $color transparent transparent;
  }

  @if $direction == right {
    border-width: math.div($sizeH, 2) 0 math.div($sizeH, 2) $sizeW;
    border-color: transparent transparent transparent $color;
  }

  @if $direction == topright {
    border-width: 0 $sizeH $sizeW 0;
    border-color: transparent $color transparent transparent;
  }

  @if $direction == topleft {
    border-width: $sizeH $sizeW 0 0;
    border-color: $color transparent transparent transparent;
  }

  @if $direction == bottomleft {
    border-width: $sizeH 0 0 $sizeW;
    border-color: transparent transparent transparent $color;
  }

  @if $direction == bottomright {
    border-width: 0 0 $sizeH $sizeW;
    border-color: transparent transparent $color transparent;
  }
}

//
// Helpers
//
@mixin srOnly {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
